<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="xyz.taobaok.wechat.mapper.UserWalletMapper">
  <resultMap id="BaseResultMap" type="xyz.taobaok.wechat.bean.UserWallet">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="open_id" jdbcType="VARCHAR" property="openId" />
    <result column="pub_share_fee" jdbcType="DECIMAL" property="pubShareFee" />
    <result column="cumulation_income" jdbcType="DECIMAL" property="cumulationIncome" />
    <result column="balance" jdbcType="DECIMAL" property="balance" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="extracting" jdbcType="DECIMAL" property="extracting" />
  </resultMap>
  <sql id="Base_Column_List">
    id, open_id, pub_share_fee, cumulation_income, balance, create_time, update_time, 
    `status`, extracting
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user_wallet
    where id = #{id,jdbcType=INTEGER}
  </select>
<!-- 通过fromUserName 查询用户信息 -->
    <select id="queryUserWalletInfo" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from user_wallet
        where open_id = #{open_id,jdbcType=VARCHAR}
    </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user_wallet
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="xyz.taobaok.wechat.bean.UserWallet" useGeneratedKeys="true">
    insert into user_wallet (open_id, pub_share_fee, cumulation_income, 
      balance, create_time, update_time, 
      `status`, extracting)
    values (#{openId,jdbcType=VARCHAR}, #{pubShareFee,jdbcType=DECIMAL}, #{cumulationIncome,jdbcType=DECIMAL}, 
      #{balance,jdbcType=DECIMAL}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{status,jdbcType=INTEGER}, #{extracting,jdbcType=DECIMAL})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="xyz.taobaok.wechat.bean.UserWallet" useGeneratedKeys="true">
    insert into user_wallet
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="openId != null">
        open_id,
      </if>
      <if test="pubShareFee != null">
        pub_share_fee,
      </if>
      <if test="cumulationIncome != null">
        cumulation_income,
      </if>
      <if test="balance != null">
        balance,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="status != null">
        `status`,
      </if>
      <if test="extracting != null">
        extracting,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="openId != null">
        #{openId,jdbcType=VARCHAR},
      </if>
      <if test="pubShareFee != null">
        #{pubShareFee,jdbcType=DECIMAL},
      </if>
      <if test="cumulationIncome != null">
        #{cumulationIncome,jdbcType=DECIMAL},
      </if>
      <if test="balance != null">
        #{balance,jdbcType=DECIMAL},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="extracting != null">
        #{extracting,jdbcType=DECIMAL},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="xyz.taobaok.wechat.bean.UserWallet">
    update user_wallet
    <set>
      <if test="openId != null">
        open_id = #{openId,jdbcType=VARCHAR},
      </if>
      <if test="pubShareFee != null">
        pub_share_fee = #{pubShareFee,jdbcType=DECIMAL},
      </if>
      <if test="cumulationIncome != null">
        cumulation_income = #{cumulationIncome,jdbcType=DECIMAL},
      </if>
      <if test="balance != null">
        balance = #{balance,jdbcType=DECIMAL},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        `status` = #{status,jdbcType=INTEGER},
      </if>
      <if test="extracting != null">
        extracting = #{extracting,jdbcType=DECIMAL},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="xyz.taobaok.wechat.bean.UserWallet">
    update user_wallet
    set open_id = #{openId,jdbcType=VARCHAR},
      pub_share_fee = #{pubShareFee,jdbcType=DECIMAL},
      cumulation_income = #{cumulationIncome,jdbcType=DECIMAL},
      balance = #{balance,jdbcType=DECIMAL},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      `status` = #{status,jdbcType=INTEGER},
      extracting = #{extracting,jdbcType=DECIMAL}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>